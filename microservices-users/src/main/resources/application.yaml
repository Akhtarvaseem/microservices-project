
spring:
  application:
    name: microservices-user
    
  datasource:
    url: jdbc:postgresql://localhost:5432/microservice-user
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver  
   
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
 
 
# get config file from server 
  config:
    import:
    - optional:configserver:http://localhost:8087
      
      
#eureka:
#  instance:
#    ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8085/eureka


#  its use for enable okhttp basicaly its use for patch updating
  cloud:
    openfeign:
      okhttp:
        enabled: true
        
        

# its use to create circuit Breaker 
management:
  health:
    circuitbreakers:
      enabled: true
      
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
        
        
#       measuring health in circuitbreaker 
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBroker: 
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count-based
        
        
        
# Retry fallbackmethod configration

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s
        
        
#  rateLimiter config

  ratelimiter:
    instances:
      rateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0
        
    